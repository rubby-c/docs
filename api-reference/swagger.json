{
  "openapi": "3.0.1",
  "info": {
    "title": "Afficone API",
    "version": "v1"
  },
  "paths": {
    "/v1/affiliates/list": {
      "get": {
        "tags": [
          "Affiliates"
        ],
        "operationId": "ListAffiliates",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/affiliates": {
      "get": {
        "tags": [
          "Affiliates"
        ],
        "operationId": "GetAffiliate",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Affiliates"
        ],
        "operationId": "CreateAffiliate",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAffiliateForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAffiliateForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAffiliateForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAffiliateForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Affiliates"
        ],
        "operationId": "DeleteAffiliate",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/affiliates/approve": {
      "patch": {
        "tags": [
          "Affiliates"
        ],
        "operationId": "SetApproval",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/affiliates/commissions": {
      "patch": {
        "tags": [
          "Affiliates"
        ],
        "operationId": "UpdateCommissions",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CommissionForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommissionForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommissionForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommissionForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/affiliates/coupon": {
      "patch": {
        "tags": [
          "Affiliates"
        ],
        "operationId": "UpdateCoupon",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CouponForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CouponForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CouponForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CouponForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/affiliates/group": {
      "patch": {
        "tags": [
          "Affiliates"
        ],
        "operationId": "SetGroup",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetAffiliateGroupForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAffiliateGroupForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAffiliateGroupForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetAffiliateGroupForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/affiliates/jwt": {
      "get": {
        "tags": [
          "Affiliates"
        ],
        "operationId": "GetAffiliateJwt",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "tags": [
          "Base"
        ],
        "operationId": "HelloWorld",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/emails/list": {
      "get": {
        "tags": [
          "Emails"
        ],
        "operationId": "ListTemplates",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/emails": {
      "get": {
        "tags": [
          "Emails"
        ],
        "operationId": "GetTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Emails"
        ],
        "operationId": "SendEmail",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTemplatePost"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTemplatePost"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTemplatePost"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTemplatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/emails/custom": {
      "post": {
        "tags": [
          "Emails"
        ],
        "operationId": "CreateCustomTemplate",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplatePost"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplatePost"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplatePost"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/payouts/list": {
      "get": {
        "tags": [
          "Payouts"
        ],
        "operationId": "ListPayouts",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/payouts": {
      "get": {
        "tags": [
          "Payouts"
        ],
        "operationId": "GetPayout",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Payouts"
        ],
        "operationId": "PostPayout",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "Payouts"
        ],
        "operationId": "PatchPayout",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutPatchForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutPatchForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutPatchForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutPatchForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Payouts"
        ],
        "operationId": "DeletePayout",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/public/list-programs": {
      "get": {
        "tags": [
          "Public"
        ],
        "operationId": "ListPrograms",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/public/token-to-id": {
      "get": {
        "tags": [
          "Public"
        ],
        "operationId": "TokenToId",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/public/portal/{token}": {
      "get": {
        "tags": [
          "Public"
        ],
        "operationId": "GetPortal",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/public/stats": {
      "get": {
        "tags": [
          "Public"
        ],
        "operationId": "GetStats",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/track": {
      "post": {
        "tags": [
          "Track"
        ],
        "operationId": "TrackAnyConversion",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/track/{code}": {
      "post": {
        "tags": [
          "Track"
        ],
        "operationId": "TrackConversion",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The referral code of the affiliate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The order object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/zapier/subscribe/{type}": {
      "post": {
        "tags": [
          "Zapier"
        ],
        "operationId": "Subscribe",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribePost"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribePost"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribePost"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/zapier/unsubscribe/{type}": {
      "delete": {
        "tags": [
          "Zapier"
        ],
        "operationId": "Unsubscribe",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AffiliateCommissionsPost": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CommissionType"
          },
          "applyIndividual": {
            "type": "boolean",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalForm": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "approved": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommissionForm": {
        "required": [
          "commissions",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "commissions": {
            "$ref": "#/components/schemas/AffiliateCommissionsPost"
          }
        },
        "additionalProperties": false
      },
      "CommissionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "CouponForm": {
        "required": [
          "coupon",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "coupon": {
            "maxLength": 16,
            "minLength": 1,
            "pattern": "^[A-Z0-9]{0,16}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateAffiliateForm": {
        "required": [
          "email",
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,})+)$",
            "type": "string"
          },
          "password": {
            "minLength": 8,
            "type": "string"
          },
          "coupon": {
            "maxLength": 16,
            "pattern": "^[A-Z0-9]{0,16}$",
            "type": "string",
            "nullable": true
          },
          "approved": {
            "type": "boolean",
            "nullable": true
          },
          "ignoreProducts": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTemplatePost": {
        "required": [
          "name",
          "title"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "html": {
            "maxLength": 1048576,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the customer.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The phone number of the customer.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of the customer.",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "description": "The IP address of the customer.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "The country of the customer.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a customer in the system."
      },
      "Order": {
        "required": [
          "orderId",
          "products"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier for the order."
          },
          "paid": {
            "type": "boolean",
            "description": "Indicates whether the order has been acknowledged in an affiliate payout."
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp of the order (in milliseconds).",
            "format": "int64",
            "nullable": true
          },
          "isRoyalty": {
            "type": "boolean",
            "description": "Indicates whether the order is a royalty order.",
            "nullable": true
          },
          "custom": {
            "type": "boolean",
            "description": "Indicates whether the order is custom.",
            "nullable": true
          },
          "commission": {
            "type": "number",
            "description": "The commission for the order.",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Additional notes for the order.",
            "nullable": true
          },
          "coupons": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of coupon codes applied to the order.",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "description": "The list of products in the order."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional metadata for the order.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents an order in the system."
      },
      "PayoutForm": {
        "required": [
          "affiliate",
          "amount",
          "payoutMethod"
        ],
        "type": "object",
        "properties": {
          "affiliate": {
            "minLength": 1,
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payoutMethod": {
            "minLength": 1,
            "type": "string"
          },
          "details": {
            "maxLength": 512,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayoutPatchForm": {
        "required": [
          "id",
          "paid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "paid": {
            "type": "boolean"
          },
          "details": {
            "maxLength": 512,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the product.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the product.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the product ordered.",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "number",
            "description": "The total price of the product in the order.",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "description": "The subtotal price of the product before tax.",
            "format": "double",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "description": "The tax amount for the product.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a product in an order."
      },
      "SendTemplatePost": {
        "required": [
          "emails",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "SetAffiliateGroupForm": {
        "required": [
          "affiliateId",
          "groupId"
        ],
        "type": "object",
        "properties": {
          "affiliateId": {
            "minLength": 1,
            "type": "string"
          },
          "groupId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SubscribePost": {
        "type": "object",
        "properties": {
          "hookUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}